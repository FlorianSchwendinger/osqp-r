OSQP_DIR=./osqp
OSQP_LIB_DIR=$(OSQP_DIR)/lib
OSQP_INCLUDE_DIR=$(OSQP_DIR)/include/osqp
OSQP_STATIC_LIB=$(OSQP_LIB_DIR)/libosqpstatic.a

OSQP_SRC_INCLUDE_DIR=./osqp_sources/include
OSQP_RCONFIG_DEFAULT_INCLUDE=./osqp_configure_R.h
OSQP_SRC_CONFIGURE_H=$(OSQP_SRC_INCLUDE_DIR)/osqp_configure.h

OSQP_FLAGS=-DR_LANG=TRUE

PKG_CXXFLAGS = $(OSQP_FLAGS) -I$(OSQP_INCLUDE_DIR) 

ROBJECTS = osqp_solve_interface.o RcppExports.o
OBJECTS  = $(ROBJECTS) $(OSQP_STATIC_LIB)

CXX_STD=CXX11

.PHONY: $(OSQP_STATIC_LIB) $(OSQP_CONFIGURE_H)

all: $(SHLIBS)

$(SHLIBS): $(OSQP_STATIC_LIB)

$(ROBJECTS): $(OSQP_STATIC_LIB)

$(OSQP_STATIC_LIB): $(OSQP_SRC_CONFIGURE_H)

		# The OSQP static library should already exist and
		# be in the correct place if we are building via cmake.
		# If we find ourselves without cmake installed (e.g. because the
		# package is being built in the CRAN servers), then we have
		# a go at building the static library here.

	  (cd $(OSQP_DIR) && \
		$(MAKE) CC="$(CC)" OSQP_FLAGS="$(OSQP_FLAGS)" \
		R_INCLUDE_DIR="$(R_INCLUDE_DIR)" CFLAGS="$(CFLAGS)" \
		CPICFLAGS="$(CPICFLAGS)" ARFLAGS="$(ARFLAGS)" \
		AR="$(AR)" RANLIB="$(RANLIB)" \
		&& $(MAKE) clean)

$(OSQP_SRC_CONFIGURE_H):

		# If we find ourselves without cmake installed, then we
		# will need to use a canned osqp_configure.h with some
		# reasonable R-specific settings.  It should live with the
		# other ./osqp_source include and will eventually be copied
		# to ./osqp/include by the ./osqp/Makefile

		(cp $(OSQP_RCONFIG_DEFAULT_INCLUDE) $(OSQP_SRC_CONFIGURE_H))
